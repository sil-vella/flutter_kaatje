name: Build Windows App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
    
    - name: Install Dart SDK
      run: |
        Write-Host "Installing Dart SDK version 3.4.0..."
        choco install dart-sdk --version=3.4.0 -y
        $dartPath = "$env:ChocolateyInstall\lib\dart-sdk\tools"
        [System.Environment]::SetEnvironmentVariable("Path", $dartPath + ";" + [System.Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::Process), [System.EnvironmentVariableTarget]::Machine)
        echo "$dartPath" >> $env:GITHUB_PATH
        Write-Host "Added Dart SDK path: $dartPath"
        $dartVersion = dart --version
        Write-Host "Dart SDK version $dartVersion installed successfully"
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.3'
        channel: 'stable'
        cache: true
        cache-key: flutter-windows-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
    
    - name: Verify Flutter and Dart versions
      run: |
        Write-Host "Checking Flutter version..."
        flutter --version
        $flutterVersion = flutter --version
        if (-not ($flutterVersion -match "3.19.3")) {
          Write-Error "Flutter version 3.19.3 is required, but found: $flutterVersion"
          exit 1
        }
        
        Write-Host "Checking Dart version..."
        dart --version
        $dartVersion = dart --version
        if (-not ($dartVersion -match "3.4.0")) {
          Write-Error "Dart version 3.4.0 is required, but found: $dartVersion"
          exit 1
        }
        Write-Host "Flutter and Dart versions verified successfully"
    
    - name: Install dependencies
      run: |
        Write-Host "Installing dependencies..."
        flutter pub get
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Failed to install dependencies"
          exit 1
        }
        Write-Host "Dependencies installed successfully"
    
    - name: Build Windows App
      run: flutter build windows --release
    
    - name: Upload Windows Build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows/runner/Release/
        if-no-files-found: error 